version: '3'
services:
  kafka:
    image: apache/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/opt/kafka/data
  postgres:            # airflow
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5434:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
#     - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Сборка витрин SQL
  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
      POSTGRES_USER: user
    ports:
      - "5002:5432"
#    volumes:
#      - data2:/var/lib/postgresql/data
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Запись изначальных данных в БД
  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - '5003:3306'
  airflow-init:
    image: airflow
    container_name: airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: a1b2c3d4e5f6a7b8c9d0e1f2g3h4i5j6
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    depends_on:
      - postgres
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        airflow db init && \
        airflow users create \
        --username admin \
        --password admin \
        --firstname Admin \
        --lastname User \
        --role Admin \
        --email admin@example.com
    volumes:
      - ./dags:/opt/airflow/dags 
  airflow-webserver:
    image: airflow
    container_name: airflow-webserver
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: a1b2c3d4e5f6a7b8c9d0e1f2g3h4i5j6
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    ports:
      - "8081:8080"
    command: "webserver"
    volumes:
      - ./dags:/opt/airflow/dags
  airflow-scheduler:
    image: airflow
    container_name: airflow-scheduler
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: a1b2c3d4e5f6a7b8c9d0e1f2g3h4i5j6
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW_CONN_POSTGRES_DEFAULT: "postgresql+psycopg2://172.17.0.1:5432/mydb"

    command: "scheduler"
    volumes:
      - ./dags:/opt/airflow/dags
volumes:
  pg_data:
  kafka-data:
  data2:
